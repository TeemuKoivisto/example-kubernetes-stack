AWSTemplateFormatVersion: 2010-09-09
Description: DB migration task in ECS cluster with Flyway

Parameters:
  Project:
    Description: Name of the project
    Type: String
  Environment:
    Description: Environment where the stack is launched
    Type: String
    AllowedValues:
      - dev
      - prod
  MigrationRepositoryUri:
    Description: Example NodeJS app's repository URI
    Type: String
  ServiceName:
    Description: Name for the service to import values from its mappings
    Type: String
    AllowedValues:
      - migration
  ImageTag:
    Description: Docker image tag for container
    Type: String
  ApplicationPort:
    Description: Port where the Example app runs
    Type: String
  DBName:
    Description: Database name eg devpostgres
    Type: String
  DBURL:
    Description: DNS URL to the database eg example-app-dev-db.calmiqc5alov.eu-west-1.rds.amazonaws.com
    Type: String
  MigrationChecksum:
    Description: asdf
    Type: String

Mappings:
  migration:
    CpuUnits:
      dev: '256'
    TaskMemory:
      dev: '0.5GB'
    ContainerMemory:
      dev: '500'
  AppLogs:
    # TODO same as in ecs-service.yaml 
    # https://github.com/aws-cloudformation/aws-cloudformation-coverage-roadmap/issues/162
    DeletionPolicy:
      dev: Delete
      prod: Retain
    RetentionDays:
      dev: 180
      prod: 180

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref ServiceName
      RequiresCompatibilities:
      - FARGATE
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskExecutionRole
      TaskRoleArn: !Ref TaskRole
      Cpu: !FindInMap [ !Ref ServiceName, CpuUnits, !Ref Environment ]
      Memory: !FindInMap [ !Ref ServiceName, TaskMemory, !Ref Environment ]
      ContainerDefinitions:
      - Name: !Sub ${Environment}-${ServiceName}
        Image: !Sub ${MigrationRepositoryUri}:${ImageTag}
        PortMappings:
        - ContainerPort: !Ref ApplicationPort
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Sub ${Project}-${Environment}-${ServiceName}
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub ${Project}-${Environment}-${ServiceName}
        Environment:
          -
            Name: JWT_SECRET_SSM_PATH
            Value: !Sub /${Project}/${Environment}/jwt-secret
          -
            Name: DB_USER_SSM_PATH
            Value: !Sub /${Project}/${Environment}/db-user
          -
            Name: DB_PASSWORD_SSM_PATH
            Value: !Sub /${Project}/${Environment}/db-password
          -
            Name: DB_NAME
            Value: !Ref DBName
          -
            Name: DB_HOST
            Value: !Ref DBURL
          -
            Name: DB_PORT
            Value: 5432
          -
            Name: AWS_ENVIRONMENT
            Value: !Ref Environment

  ApplicationLogGroup:
    DeletionPolicy: Delete
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${Project}-${Environment}-${ServiceName}
      RetentionInDays: !FindInMap [ AppLogs, RetentionDays, !Ref Environment ]

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Project}-${Environment}-${ServiceName}-TaskRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: TaskRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action: ssm:GetParameter*
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Project}/${Environment}/*
              -
                Effect: Allow
                Action: kms:Decrypt
                Resource: '*'

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Project}-${Environment}-${ServiceName}-TaskExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  MigrationChecksumParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: Migration checksum used in cf-migrate.sh script
      Name: !Sub /${Project}/${Environment}/migration-checksum
      Type: String
      Value: !Ref MigrationChecksum